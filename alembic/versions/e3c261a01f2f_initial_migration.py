"""Initial migration

Revision ID: e3c261a01f2f
Revises: 
Create Date: 2025-06-04 12:46:08.711525

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e3c261a01f2f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('partner',
    sa.Column('partner_id', sa.Integer(), nullable=False),
    sa.Column('partner_name', sa.String(), nullable=True),
    sa.Column('partner_email', sa.String(), nullable=True),
    sa.Column('partner_ph_no', sa.Integer(), nullable=True),
    sa.Column('partner_address', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('onboarding_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('partner_id')
    )
    op.create_index(op.f('ix_partner_partner_id'), 'partner', ['partner_id'], unique=False)
    op.create_table('plan',
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('plan_name', sa.String(), nullable=True),
    sa.Column('plan_amount', sa.Float(), nullable=True),
    sa.Column('duration_in_days', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('plan_id')
    )
    op.create_index(op.f('ix_plan_plan_id'), 'plan', ['plan_id'], unique=False)
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('partner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['partner_id'], ['partner.partner_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_account_id'), 'account', ['id'], unique=False)
    op.create_table('plan_feature',
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('feature_name', sa.String(), nullable=True),
    sa.Column('feature_description', sa.String(), nullable=True),
    sa.Column('feature_catagory', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_deductable', sa.Boolean(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.plan_id'], ),
    sa.PrimaryKeyConstraint('feature_id')
    )
    op.create_index(op.f('ix_plan_feature_feature_id'), 'plan_feature', ['feature_id'], unique=False)
    op.create_table('wallet',
    sa.Column('wallet_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('monthly_balance', sa.Float(), nullable=True),
    sa.Column('fixed_balance', sa.Float(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('token', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('wallet_id')
    )
    op.create_index(op.f('ix_wallet_wallet_id'), 'wallet', ['wallet_id'], unique=False)
    op.create_table('subscription',
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('wallet_id', sa.Integer(), nullable=True),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('is_billed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.plan_id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallet.wallet_id'], ),
    sa.PrimaryKeyConstraint('subscription_id')
    )
    op.create_index(op.f('ix_subscription_subscription_id'), 'subscription', ['subscription_id'], unique=False)
    op.create_table('wallet_transaction',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('wallet_id', sa.Integer(), nullable=True),
    sa.Column('transaction_type', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('previous_balance', sa.Float(), nullable=True),
    sa.Column('current_balance', sa.Float(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('remark', sa.String(), nullable=True),
    sa.Column('additional_info', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallet.wallet_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_index(op.f('ix_wallet_transaction_transaction_id'), 'wallet_transaction', ['transaction_id'], unique=False)
    op.create_table('partner_transaction',
    sa.Column('partner_transaction_id', sa.Integer(), nullable=False),
    sa.Column('parnter_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('commission_rate', sa.Float(), nullable=True),
    sa.Column('commission_type', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('commission_amount', sa.Float(), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parnter_id'], ['partner.partner_id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['wallet_transaction.transaction_id'], ),
    sa.PrimaryKeyConstraint('partner_transaction_id')
    )
    op.create_index(op.f('ix_partner_transaction_partner_transaction_id'), 'partner_transaction', ['partner_transaction_id'], unique=False)
    op.create_table('settlement',
    sa.Column('settlement_id', sa.Integer(), nullable=False),
    sa.Column('partner_id', sa.Integer(), nullable=True),
    sa.Column('partner_transaction_id', sa.Integer(), nullable=True),
    sa.Column('settlement_status', sa.String(), nullable=True),
    sa.Column('settlement_date', sa.DateTime(), nullable=True),
    sa.Column('settlement_amount', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['partner_id'], ['partner.partner_id'], ),
    sa.ForeignKeyConstraint(['partner_transaction_id'], ['partner_transaction.partner_transaction_id'], ),
    sa.PrimaryKeyConstraint('settlement_id')
    )
    op.create_index(op.f('ix_settlement_settlement_id'), 'settlement', ['settlement_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_settlement_settlement_id'), table_name='settlement')
    op.drop_table('settlement')
    op.drop_index(op.f('ix_partner_transaction_partner_transaction_id'), table_name='partner_transaction')
    op.drop_table('partner_transaction')
    op.drop_index(op.f('ix_wallet_transaction_transaction_id'), table_name='wallet_transaction')
    op.drop_table('wallet_transaction')
    op.drop_index(op.f('ix_subscription_subscription_id'), table_name='subscription')
    op.drop_table('subscription')
    op.drop_index(op.f('ix_wallet_wallet_id'), table_name='wallet')
    op.drop_table('wallet')
    op.drop_index(op.f('ix_plan_feature_feature_id'), table_name='plan_feature')
    op.drop_table('plan_feature')
    op.drop_index(op.f('ix_account_id'), table_name='account')
    op.drop_table('account')
    op.drop_index(op.f('ix_plan_plan_id'), table_name='plan')
    op.drop_table('plan')
    op.drop_index(op.f('ix_partner_partner_id'), table_name='partner')
    op.drop_table('partner')
    # ### end Alembic commands ###
